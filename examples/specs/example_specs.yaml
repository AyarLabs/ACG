# example_specs.yaml
# This file contains the basic variables required to specify a design in ACG

# This file is parsed into nested dicts by the AyarDesignManager class; its data can be accessed by any subclass through
# reading self.specs

impl_lib: 'example_lib'         # Library name in virtuoso where the generated designs will be stored
impl_cell: 'example_cell'       # Cell name in virtuoso where the generated design will be stored

sch_temp_lib: 'sch_temp_lib'    # Library name in virtuoso where the schematic template is currently stored
sch_temp_cell: 'sch_temp_cell'  # Cell name of the schematic template

layout_package: 'ACG_Core_Layout.DiffAmp.RLoad_Diff_Amp' # Name of the package that contains your layout generator class
layout_class: 'RLoadDiffAmpLayout'    # Name of the top level python class in layout_package that generates your layout

# These parameters are required to generate a testbench and run simulations.
tb_params:
  # Each of the following specifies 1 testbench
  example_tb1:
    tb_lib: 'tb_lib'              # Library in virtuoso where the testbench template can be found
    tb_cell: 'tb1_cell'           # Cell in tb_lib where the testbench template can be found
    tb_sch_params:
      # These are used to specify the testbench schematic generator
      param1: {}
      param2: {}
    tb_sim_params:
      # These are used as parameters in the ADEXL simulation state
      param1: 0
      param2: 100.0e+9
    data_dir: 'example_tb1_data'  # directory name in chip_dev where the results of this sim are stored
    sim_envs: ['tt']              # list of corners to run this test on
    view_name: 'schematic'        # view to set the config file to use for simulation
  example_tb2:
    tb_lib: 'tb_lib'
    tb_cell: 'tb2_cell'
    tb_sch_params:
      param1: {}
      param2: {}
    tb_sim_params:
      param1: 0
      param2: 100.0e+9
    data_dir: 'example_tb2_data'
    sim_envs: ['ff_hot']
    view_name: 'netlist'          # netlist views are generated by PEX, and can be used in the simulation

root_dir: 'data'  # Root directory where the data is stored
sweep_params:     # Defines which parameters are to be swept in simulation
  intent: [standard]    # This must exist even if you don't run simulations, Eric will change this soon

# These parameter dicts are dependent on how your design script operates.
# Ex: If your design class calculates the layout and schematic parameters, you do not need layout/sch sections
dsn_params:
layout_params:
sch_params:
